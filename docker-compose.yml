version: '3.7'

services:
  app:
    image: phmarquesdev/lets-help-rs-backend:latest
    container_name: lets-help-rs-backend
    user: 'root'
    restart: always
    working_dir: /app
    ports:
      - '3000:3000'
    environment:
      - DB_PROVIDER=${DB_PROVIDER}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SCHEMA=${DB_SCHEMA}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_URL_WITH_SCHEMA=${DATABASE_URL_WITH_SCHEMA}
      - NODE_ENV=${NODE_ENV}
      - SERVER_PORT=${SERVER_PORT}
      - CREATION_ACCURACY_RADIUS_IN_DEGREES=${CREATION_ACCURACY_RADIUS_IN_DEGREES}
      - LOCALIZATION_ACCURACY_RADIUS_IN_DEGREES=${LOCALIZATION_ACCURACY_RADIUS_IN_DEGREES}
      - REPORT_DELETE=${REPORT_DELETE}
      - NODE_TLS_REJECT_UNAUTHORIZED=${NODE_TLS_REJECT_UNAUTHORIZED}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=Host(`api2.letshelprs.online`)'
      - 'traefik.http.routers.backend.entrypoints=websecure'
      - 'traefik.http.routers.backend.tls.certresolver=myresolver'
      - 'traefik.http.services.backend.loadbalancer.server.port=3000'
    volumes:
      - ./:/app
    depends_on:
      - db
    networks:
      - web

  db:
    container_name: lets-help-rs-database
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - web

networks:
  web:
    external: true

volumes:
  pgdata:
